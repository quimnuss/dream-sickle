[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://bryl5utak1o6d"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_yl6q5"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_yl6q5"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_pxvmv"]
expanded_output_ports = [0]
texture = SubResource("NoiseTexture2D_yl6q5")

[sub_resource type="VisualShaderNodeUVPolarCoord" id="VisualShaderNodeUVPolarCoord_ygtsf"]
default_input_values = [1, Vector2(0.5, 0.5), 2, 3.0, 3, 1.0]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_ir37q"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jv1j3"]
input_name = "time"

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_54vjg"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0.5, 0.5), 2, Vector2(-0.3, 0.3)]
op_type = 1

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_pxvmv"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_lg5f8"]
texture = SubResource("NoiseTexture2D_pxvmv")

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_qicnn"]
parameter_name = "ColorParameter"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform vec4 ColorParameter : source_color;
uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_7;



void fragment() {
// ColorParameter:8
	vec4 n_out8p0 = ColorParameter;


	vec2 n_out3p0;
// UVPolarCoord:3
	vec2 n_in3p1 = vec2(0.50000, 0.50000);
	float n_in3p2 = 3.00000;
	float n_in3p3 = 1.00000;
	{
		vec2 __dir = UV - n_in3p1;
		float __radius = length(__dir) * 2.0;
		float __angle = atan(__dir.y, __dir.x) * 1.0 / (PI * 2.0);
		n_out3p0 = vec2(__radius * n_in3p2, __angle * n_in3p3);
	}


// Input:5
	float n_out5p0 = TIME;


// MultiplyAdd:6
	vec2 n_in6p1 = vec2(0.50000, 0.50000);
	vec2 n_in6p2 = vec2(-0.30000, 0.30000);
	vec2 n_out6p0 = fma(vec2(n_out5p0), n_in6p1, n_in6p2);


// UVFunc:4
	vec2 n_in4p1 = vec2(1.00000, 1.00000);
	vec2 n_out4p0 = n_out6p0 * n_in4p1 + n_out3p0;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, n_out4p0);
	float n_out2p1 = n_out2p0.r;


// VectorOp:10
	vec4 n_out10p0 = n_out8p0 * vec4(n_out2p1);


// Texture2D:7
	vec4 n_out7p0 = texture(tex_frg_7, UV);


// Output:0
	ALBEDO = vec3(n_out10p0.xyz);
	ALPHA = n_out7p0.x;


}
"
graph_offset = Vector2(-808.544, -167.268)
modes/cull = 2
flags/unshaded = true
nodes/fragment/0/position = Vector2(560, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_pxvmv")
nodes/fragment/2/position = Vector2(-240, 280)
nodes/fragment/3/node = SubResource("VisualShaderNodeUVPolarCoord_ygtsf")
nodes/fragment/3/position = Vector2(-780, 400)
nodes/fragment/4/node = SubResource("VisualShaderNodeUVFunc_ir37q")
nodes/fragment/4/position = Vector2(-480, 420)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_jv1j3")
nodes/fragment/5/position = Vector2(-1000, 680)
nodes/fragment/6/node = SubResource("VisualShaderNodeMultiplyAdd_54vjg")
nodes/fragment/6/position = Vector2(-660, 680)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture_lg5f8")
nodes/fragment/7/position = Vector2(-320, 740)
nodes/fragment/8/node = SubResource("VisualShaderNodeColorParameter_qicnn")
nodes/fragment/8/position = Vector2(-460, -40)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_yl6q5")
nodes/fragment/10/position = Vector2(180, 0)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 4, 0, 2, 0, 5, 0, 6, 0, 6, 0, 4, 2, 7, 0, 0, 1, 8, 0, 10, 0, 2, 1, 10, 1, 10, 0, 0, 0)
